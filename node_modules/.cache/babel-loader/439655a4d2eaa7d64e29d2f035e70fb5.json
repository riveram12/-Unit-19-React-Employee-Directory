{"ast":null,"code":"var _jsxFileName = \"/Users/mariahrivera/Desktop/Unit19-React-Employee-Directory/src/components/EmployeeTable/EmployeeTable.js\";\nimport React, { Component } from \"react\";\nimport Employees from \"../Employees/Employees.js\";\nimport Search from \"../Search/Search.js\";\nimport \"../EmployeeTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      empSort: [],\n      search: \"\",\n      sorted: false\n    };\n\n    this.componentDidMount = () => {\n      fetch(`https://randomuser.me/api/?results=25&nat=us&inc=id,picture,name,phone,email,dob`).then(res => res.json()).then(json => {\n        this.setState({\n          employees: json.results\n        });\n      });\n    };\n\n    this.sortEmp = () => {\n      let {\n        employees,\n        search\n      } = this.state;\n      let empSort = employees.filter(sorted => {\n        return sorted.name.first.toLowerCase().includes(search.toLowerCase()) || sorted.name.last.toLowerCase().includes(search.toLowerCase()) || sorted.email.toLowerCase().includes(search.toLowerCase());\n      });\n      this.setState({\n        empSort\n      });\n    };\n\n    this.startSort = event => {\n      this.setState({\n        search: event.target.value\n      }, () => {\n        this.sortEmp();\n        this.setState({\n          sorted: true\n        });\n      });\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jumbotron\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"display-4\",\n            children: \"Employee Directory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Welcome to the Office Directory!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Search below by name or email to find a coworker.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            name: \"search\",\n            startSort: this.startSort,\n            label: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"thead\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Picture \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Birthdate \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [!this.state.sorted ? this.state.employees.map(employee => /*#__PURE__*/_jsxDEV(Employees, {\n                icon: employee.picture.medium,\n                firstName: employee.name.first,\n                lastName: employee.name.last,\n                phone: employee.phone,\n                email: employee.email,\n                dob: employee.dob.date\n              }, employee.id.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)) : // otherwise map the sorted employees\n              this.state.empSort.map(employee => /*#__PURE__*/_jsxDEV(Employees, {\n                icon: employee.picture.medium,\n                firstName: employee.name.first,\n                lastName: employee.name.last,\n                phone: employee.phone,\n                email: employee.email,\n                dob: employee.dob.date\n              }, employee.id.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n}\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/mariahrivera/Desktop/Unit19-React-Employee-Directory/src/components/EmployeeTable/EmployeeTable.js"],"names":["React","Component","Employees","Search","EmployeeTable","state","employees","empSort","search","sorted","componentDidMount","fetch","then","res","json","setState","results","sortEmp","filter","name","first","toLowerCase","includes","last","email","startSort","event","target","value","render","map","employee","picture","medium","phone","dob","date","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Employees from \"../Employees/Employees.js\";\nimport Search from \"../Search/Search.js\";\nimport \"../EmployeeTable.css\";\n\nclass EmployeeTable extends Component {\n  state = {\n    employees: [],\n    empSort: [],\n    search: \"\",\n    sorted: false,\n  };\n\n  // check that the component rendered at least once, and pull in our data\n  // wait for the information to come back\n  componentDidMount = () => {\n    fetch(\n      `https://randomuser.me/api/?results=25&nat=us&inc=id,picture,name,phone,email,dob`\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({ employees: json.results });\n      });\n  };\n\n  // sort through employees based on search term\n  // check if there is a match and set that to empSort for rendering\n  sortEmp = () => {\n    let { employees, search } = this.state;\n    let empSort = employees.filter((sorted) => {\n      return (\n        sorted.name.first.toLowerCase().includes(search.toLowerCase()) ||\n        sorted.name.last.toLowerCase().includes(search.toLowerCase()) ||\n        sorted.email.toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    this.setState({ empSort });\n  };\n\n  // grab search term, activate sorted\n  startSort = (event) => {\n    this.setState({ search: event.target.value }, () => {\n      this.sortEmp();\n      this.setState({ sorted: true });\n    });\n  };\n\n  render = () => {\n    return (\n      <div>\n        <div className=\"jumbotron\">\n          <h2 className=\"display-4\">Employee Directory</h2>\n          <p>Welcome to the Office Directory!</p>\n          <p> Search below by name or email to find a coworker.</p>\n          <Search name=\"search\" startSort={this.startSort} label=\"Search\" />\n        </div>\n\n        <div className=\"container\">\n          <table className=\"table\">\n            <thead className=\"thead\">\n              <tr>\n                <th>Picture </th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Birthdate </th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* if it's not sorted, map accordingly */}\n              {!this.state.sorted\n                ? this.state.employees.map((employee) => (\n                    <Employees\n                      key={employee.id.value}\n                      icon={employee.picture.medium}\n                      firstName={employee.name.first}\n                      lastName={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      dob={employee.dob.date}\n                    />\n                  ))\n                : // otherwise map the sorted employees\n                  this.state.empSort.map((employee) => (\n                    <Employees\n                      key={employee.id.value}\n                      icon={employee.picture.medium}\n                      firstName={employee.name.first}\n                      lastName={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      dob={employee.dob.date}\n                    />\n                  ))}\n              ;\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default EmployeeTable;\n"]},"metadata":{},"sourceType":"module"}