{"version":3,"sources":["components/Employees/Employees.js","components/Search/Search.js","components/EmployeeTable/EmployeeTable.js","App.js","index.js"],"names":["Employees","props","className","alt","firstName","src","icon","lastName","email","phone","dob","Search","placeholder","name","type","onChange","event","startSort","EmployeeTable","state","employees","empSort","search","sorted","componentDidMount","fetch","then","res","json","setState","results","sortEmp","filter","first","toLowerCase","includes","last","target","value","render","label","map","employee","picture","medium","date","id","Component","App","ReactDOM","document","getElementById"],"mappings":"wVAoBeA,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAU,KAAd,UACE,6BACE,qBAAKC,IAAKF,EAAMG,UAAWC,IAAKJ,EAAMK,SAExC,+BACGL,EAAMG,UADT,IACqBH,EAAMM,YAE3B,6BAAKN,EAAMO,QACX,+BAAKP,EAAMQ,MAAX,OACA,6BAAKR,EAAMS,UCIFC,G,MAhBA,SAACV,GACd,OACE,qBAAKC,UAAU,wCAAf,SACE,+BACE,uBACEU,YAAY,gCACZC,KAAK,SACLC,KAAK,OACLZ,UAAU,sCACVa,SAAU,SAACC,GAAD,OAAWf,EAAMgB,UAAUD,YC2FhCE,E,4MAjGbC,MAAQ,CACNC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,QAAQ,G,EAKVC,kBAAoB,WAClBC,MAAM,oFAGHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,EAAKC,SAAS,CAAET,UAAWQ,EAAKE,c,EAMtCC,QAAU,WAAO,IAAD,EACc,EAAKZ,MAA3BC,EADQ,EACRA,UAAWE,EADH,EACGA,OACbD,EAAUD,EAAUY,QAAO,SAACT,GAC9B,OACEA,EAAOV,KAAKoB,MAAMC,cAAcC,SAASb,EAAOY,gBAChDX,EAAOV,KAAKuB,KAAKF,cAAcC,SAASb,EAAOY,gBAC/CX,EAAOf,MAAM0B,cAAcC,SAASb,EAAOY,kBAG/C,EAAKL,SAAS,CAAER,a,EAIlBJ,UAAY,SAACD,GACX,EAAKa,SAAS,CAAEP,OAAQN,EAAMqB,OAAOC,QAAS,WAC5C,EAAKP,UACL,EAAKF,SAAS,CAAEN,QAAQ,Q,EAI5BgB,OAAS,WACP,OACE,gCACE,sBAAKrC,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,iEACA,mFACA,cAAC,EAAD,CAAQW,KAAK,SAASI,UAAW,EAAKA,UAAWuB,MAAM,cAGzD,qBAAKtC,UAAU,YAAf,SACE,wBAAOA,UAAU,QAAjB,UACE,uBAAOA,UAAU,QAAjB,SACE,+BACE,0CACA,sCACA,uCACA,uCACA,iDAGJ,kCAEI,EAAKiB,MAAMI,OAaT,EAAKJ,MAAME,QAAQoB,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAEEpC,KAAMoC,EAASC,QAAQC,OACvBxC,UAAWsC,EAAS7B,KAAKoB,MACzB1B,SAAUmC,EAAS7B,KAAKuB,KACxB3B,MAAOiC,EAASjC,MAChBD,MAAOkC,EAASlC,MAChBE,IAAKgC,EAAShC,IAAImC,MANbH,EAASI,GAAGR,UAdrB,EAAKnB,MAAMC,UAAUqB,KAAI,SAACC,GAAD,OACvB,cAAC,EAAD,CAEEpC,KAAMoC,EAASC,QAAQC,OACvBxC,UAAWsC,EAAS7B,KAAKoB,MACzB1B,SAAUmC,EAAS7B,KAAKuB,KACxB3B,MAAOiC,EAASjC,MAChBD,MAAOkC,EAASlC,MAChBE,IAAKgC,EAAShC,IAAImC,MANbH,EAASI,GAAGR,UAL3B,gB,YA/DgBS,a,YC+BbC,MA7Bf,WACE,OAEE,cADA,CACA,iBACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,YCNNC,IAASV,OAAO,cAAC,EAAD,IAASW,SAASC,eAAe,W","file":"static/js/main.88209efc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../EmployeeTable/EmployeeTable.css\";\n// import \"../Employees/EmployeesTable.js\";\n\nconst Employees = (props) => {\n  return (\n    <tr className=\"tr\">\n      <td>\n        <img alt={props.firstName} src={props.icon} />\n      </td>\n      <td>\n        {props.firstName} {props.lastName}\n      </td>\n      <td>{props.email}</td>\n      <td>{props.phone} </td>\n      <td>{props.dob}</td>\n    </tr>\n  );\n};\n\nexport default Employees;\n","import React from \"react\";\nimport \"../Search/Search.css\";\n\nconst Search = (props) => {\n  return (\n    <div className=\"d-flex justify-content-center mx-auto\">\n      <form>\n        <input\n          placeholder=\"Search for your coworker here\"\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control-lg search-font mx-auto\"\n          onChange={(event) => props.startSort(event)}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Employees from \"../Employees/Employees.js\";\nimport Search from \"../Search/Search.js\";\nimport \"./EmployeeTable.css\";\n\nclass EmployeeTable extends Component {\n  state = {\n    employees: [],\n    empSort: [],\n    search: \"\",\n    sorted: false,\n  };\n\n  // check that the component rendered at least once, and pulls in our data\n  // wait for the information to come back\n  componentDidMount = () => {\n    fetch(\n      `https://randomuser.me/api/?results=25&nat=us&inc=id,picture,name,phone,email,dob`\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({ employees: json.results });\n      });\n  };\n\n  // sort through employees based on search term\n  // check if there is a match and set that to empSort for rendering\n  sortEmp = () => {\n    let { employees, search } = this.state;\n    let empSort = employees.filter((sorted) => {\n      return (\n        sorted.name.first.toLowerCase().includes(search.toLowerCase()) ||\n        sorted.name.last.toLowerCase().includes(search.toLowerCase()) ||\n        sorted.email.toLowerCase().includes(search.toLowerCase())\n      );\n    });\n    this.setState({ empSort });\n  };\n\n  // grab search term, activate sorted\n  startSort = (event) => {\n    this.setState({ search: event.target.value }, () => {\n      this.sortEmp();\n      this.setState({ sorted: true });\n    });\n  };\n\n  render = () => {\n    return (\n      <div>\n        <div className=\"jumbotron\">\n          <h2 className=\"display-4\">Employee Directory</h2>\n          <p>Welcome to the Office Directory!</p>\n          <p> Search below by name or email to find a coworker.</p>\n          <Search name=\"search\" startSort={this.startSort} label=\"Search\" />\n        </div>\n\n        <div className=\"container\">\n          <table className=\"table\">\n            <thead className=\"thead\">\n              <tr>\n                <th>Picture </th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Birthdate </th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* if it's not sorted, map accordingly */}\n              {!this.state.sorted\n                ? this.state.employees.map((employee) => (\n                    <Employees\n                      key={employee.id.value}\n                      icon={employee.picture.medium}\n                      firstName={employee.name.first}\n                      lastName={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      dob={employee.dob.date}\n                    />\n                  ))\n                : // otherwise map the sorted employees\n                  this.state.empSort.map((employee) => (\n                    <Employees\n                      key={employee.id.value}\n                      icon={employee.picture.medium}\n                      firstName={employee.name.first}\n                      lastName={employee.name.last}\n                      phone={employee.phone}\n                      email={employee.email}\n                      dob={employee.dob.date}\n                    />\n                  ))}\n              ;\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\n// import Wrapper from \"./components/Wrapper/Wrapper\";\nimport Jumbotron from \"./components/EmployeeTable/EmployeeTable\";\nimport employees from \"./employees.json\";\nimport Main from \"./components/EmployeeTable/EmployeeTable\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    // <Wrapper>\n    <div>\n      <Jumbotron />\n      <Main />\n    </div>\n    // </Wrapper>\n  );\n}\n\n// export default App;\n// function App() {\n//   return (\n//     <Router>\n//       <div>\n//         <Navbar />\n//         <Wrapper>\n//           <Route exact path=\"/\" component={About} />\n//           <Route exact path=\"/about\" component={About} />\n//           <Route exact path=\"/discover\" component={Discover} />\n//           <Route exact path=\"/search\" component={Search} />\n//         </Wrapper>\n//         <Footer />\n//       </div>\n//     </Router>\n//   );\n// };\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}